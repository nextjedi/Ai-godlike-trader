# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
variables:
  imageName: 'pipelines-javascript-docker'
  DOCKER_BUILDKIT: 1
steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
# - task: Maven@4
#   inputs:
#     mavenPomFile: 'pom.xml'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.17'
#     mavenVersionOption: 'Default'
#     mavenAuthenticateFeed: false
#     effectivePomSkip: false
#     sonarQubeRunAnalysis: false
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'spring-boot:build-image'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false



# - task: CopyFiles@2
#   inputs:
#     SourceFolder: 'target'
#     Contents: '*.jar'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: Docker@2
  displayName: Push Docker image
  inputs:
    containerRegistry: 'algo'
    repository: 'algo-trading'
    command: 'build'
    Dockerfile: app/Dockerfile

- task: Docker@2
  inputs:
    command: 'buildAndPush'
    Dockerfile: '**'